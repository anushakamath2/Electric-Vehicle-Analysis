<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='0.5' />
      <format attr='animation-style' value='as-phased' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Countries with EV market share' inline='true' name='federated.0uxocw91evm3s51bgde5x08ibd9a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vehicles Per Capita Clean' name='textscan.03eb0j907r9l3v1dxq9xt1bhfgqt'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/World Stats' filename='Countries with EV market share.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Countries with EV market share' name='textscan.044hokq02bpemj1ghh0gn024dvpa'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/World Stats' filename='Countries with EV market share.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.044hokq02bpemj1ghh0gn024dvpa' name='Countries with EV market share.csv' table='[Countries with EV market share#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country or Region' ordinal='0' />
            <column datatype='string' name='PEV stock/cumulative sales (2021)' ordinal='1' />
            <column datatype='integer' name='Annual sales (2021)' ordinal='2' />
            <column datatype='real' name='Market share (2021)' ordinal='3' />
            <column datatype='real' name='% of cars in use (2021)' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.044hokq02bpemj1ghh0gn024dvpa' name='Countries with EV market share.csv' table='[Countries with EV market share#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country or Region' ordinal='0' />
            <column datatype='string' name='PEV stock/cumulative sales (2021)' ordinal='1' />
            <column datatype='integer' name='Annual sales (2021)' ordinal='2' />
            <column datatype='real' name='Market share (2021)' ordinal='3' />
            <column datatype='real' name='% of cars in use (2021)' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries with EV market share.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country or Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country or Region]</local-name>
            <parent-name>[Countries with EV market share.csv]</parent-name>
            <remote-alias>Country or Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEV stock/cumulative sales (2021)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PEV stock/cumulative sales (2021)]</local-name>
            <parent-name>[Countries with EV market share.csv]</parent-name>
            <remote-alias>PEV stock/cumulative sales (2021)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual sales (2021)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual sales (2021)]</local-name>
            <parent-name>[Countries with EV market share.csv]</parent-name>
            <remote-alias>Annual sales (2021)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market share (2021)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Market share (2021)]</local-name>
            <parent-name>[Countries with EV market share.csv]</parent-name>
            <remote-alias>Market share (2021)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of cars in use (2021)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of cars in use (2021)]</local-name>
            <parent-name>[Countries with EV market share.csv]</parent-name>
            <remote-alias>% of cars in use (2021)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Cars In Use' datatype='real' name='[% of cars in use (2021)]' role='measure' type='quantitative' />
      <column caption='Annual sales' datatype='integer' name='[Annual sales (2021)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country or Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Market share' datatype='real' name='[Market share (2021)]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[PEV stock/cumulative sales (2021)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Countries with EV market share.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D]' role='measure' type='quantitative' />
      <column-instance column='[% of cars in use (2021)]' derivation='Sum' name='[sum:% of cars in use (2021):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual sales (2021)]' derivation='Sum' name='[sum:Annual sales (2021):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Market share (2021)]' derivation='Sum' name='[sum:Market share (2021):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='13' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#116985'>
              <bucket>&quot;[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:\% of cars in use (2021):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:Annual sales (2021):qk]&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:Market share (2021):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Country or Region]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Country or Region]' />
          <groupfilter function='member' level='[Country or Region]' member='&quot;Global total&quot;' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Countries with EV market share.csv' id='Countries with EV market share.csv_DB91C1B1915B46FE8749FDA1106D350D'>
            <properties context=''>
              <relation connection='textscan.044hokq02bpemj1ghh0gn024dvpa' name='Countries with EV market share.csv' table='[Countries with EV market share#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country or Region' ordinal='0' />
                  <column datatype='string' name='PEV stock/cumulative sales (2021)' ordinal='1' />
                  <column datatype='integer' name='Annual sales (2021)' ordinal='2' />
                  <column datatype='real' name='Market share (2021)' ordinal='3' />
                  <column datatype='real' name='% of cars in use (2021)' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Output' inline='true' name='federated.10dxos406scfp710dwvfu1soaus1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vehicles Per Capita Clean' name='textscan.0konlp51v9yqb11bqycgf1ius8x3'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/Datasets/World Stats' filename='Vehicles Per Capita Clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Output' name='textscan.0xd3veh0uihx451447z6a0u39d0n'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/Datasets' filename='Output.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Countries with EV market share' name='textscan.149eoge1wbcbvt1ae98kt07a5ej3'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/OneDrive/Documents/Spring 2022/DV/Final Project/Datasets' filename='Map_data - Cleaned.csv' password='' server='' />
          </named-connection>
          <named-connection caption='ev_registration_state_wise' name='textscan.1qrjpbl0dqlxff10339lb09bvf72'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/OneDrive/Documents/Spring 2022/DV/Final Project/Datasets/EV Registration State wise' filename='ev_registration_state_wise.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xd3veh0uihx451447z6a0u39d0n' name='Map_data - Cleaned.csv' table='[Map_data - Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='Latitude' ordinal='0' />
            <column datatype='real' name='Longitude' ordinal='1' />
            <column datatype='integer' name='ID' ordinal='2' />
            <column datatype='real' name='PowerKW' ordinal='3' />
            <column datatype='string' name='Title (AddressInfo.Country)' ordinal='4' />
            <column datatype='string' name='Title (Connections.ConnectionType)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0xd3veh0uihx451447z6a0u39d0n' name='Map_data - Cleaned.csv' table='[Map_data - Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='Latitude' ordinal='0' />
            <column datatype='real' name='Longitude' ordinal='1' />
            <column datatype='integer' name='ID' ordinal='2' />
            <column datatype='real' name='PowerKW' ordinal='3' />
            <column datatype='string' name='Title (AddressInfo.Country)' ordinal='4' />
            <column datatype='string' name='Title (Connections.ConnectionType)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PowerKW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PowerKW]</local-name>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias>PowerKW</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title (AddressInfo.Country)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Title (AddressInfo.Country)]</local-name>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias>Title (AddressInfo.Country)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title (Connections.ConnectionType)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Title (Connections.ConnectionType)]</local-name>
            <parent-name>[Map_data - Cleaned.csv]</parent-name>
            <remote-alias>Title (Connections.ConnectionType)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Power KW' datatype='real' name='[PowerKW]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Rank]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Title (AddressInfo.Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Taiwan, Province Of China&quot;' value='&quot;China&quot;' />
        </semantic-values>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Map_data - Cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0]' role='measure' type='quantitative' />
      <column-instance column='[Title (AddressInfo.Country)]' derivation='None' name='[none:Title (AddressInfo.Country):nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/Draft.twb Files/Output.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country or region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country or region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country or region</remote-alias>
              <ordinal>0</ordinal>
              <family>Vehicles Per Capita Clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Motor vehiclesper 1,000 people</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Motor vehiclesper 1,000 people]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Motor vehiclesper 1,000 people</remote-alias>
              <ordinal>1</ordinal>
              <family>Vehicles Per Capita Clean.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total</remote-alias>
              <ordinal>2</ordinal>
              <family>Vehicles Per Capita Clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Title (AddressInfo.Country):nk]' palette='sf_bluegrass' type='palette'>
            <map to='#053661'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#073e92'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#358ead'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4ba5ba'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#95cecf'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b9213e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bb233e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bc253f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bd273f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bf293f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c02b40'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c22e40'>
              <bucket>&quot;Taiwan, Province Of China&quot;</bucket>
            </map>
            <map to='#c53341'>
              <bucket>&quot;Svalbard And Jan Mayen&quot;</bucket>
            </map>
            <map to='#c73541'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#c93942'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ca3b42'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#cb3c43'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#cc3e43'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ce4043'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d04444'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d14544'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d34745'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d44945'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d94f46'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#db5347'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#dd5647'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#df5847'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e05a48'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15b48'>
              <bucket>&quot;Moldova, Republic Of&quot;</bucket>
            </map>
            <map to='#e25d48'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e35f48'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e46048'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e56249'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#e66449'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e76649'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e86849'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e96949'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ea6b49'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#eb6d49'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ec6f49'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ed7149'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ee744a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1794a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f27b4a'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#f37e4a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f4804a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f4c860'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#f4ca61'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f4cc63'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f4ce64'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Aland Islands&quot;</bucket>
            </map>
            <map to='#f5be59'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f5c05a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f5c25c'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f5c65f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f6844b'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f6b856'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#f6ba57'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f7864b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f7884b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b254'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f7b455'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f7b655'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f88a4c'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f8ad52'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f98e4c'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f9a550'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f9a750'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f9a950'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fa924d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fa9c4f'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fa9e4f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#faa34f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fb944d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fb964e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fb984e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fb9a4e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Map_data - Cleaned.csv' id='Map_data - Cleaned.csv_6345E6A3AA9D4A56AA78A883BC74DED0'>
            <properties context=''>
              <relation connection='textscan.0xd3veh0uihx451447z6a0u39d0n' name='Map_data - Cleaned.csv' table='[Map_data - Cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='Latitude' ordinal='0' />
                  <column datatype='real' name='Longitude' ordinal='1' />
                  <column datatype='integer' name='ID' ordinal='2' />
                  <column datatype='real' name='PowerKW' ordinal='3' />
                  <column datatype='string' name='Title (AddressInfo.Country)' ordinal='4' />
                  <column datatype='string' name='Title (Connections.ConnectionType)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Vehicles Per Capita Clean.csv' id='Vehicles Per Capita Clean.csv_5C084208F10B436E88FF65BC69D57113'>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Electric Data (2)' inline='true' name='federated.0pbxc990on4unf187q5xe1txy1xc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electric Data' name='textscan.0ok43fg1weusoe198zkji0vg4vc1'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/OneDrive/Documents/Spring 2022/DV/Final Project/Datasets' filename='Electric Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ok43fg1weusoe198zkji0vg4vc1' name='Electric Data.csv' table='[Electric Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Brand' ordinal='0' />
            <column datatype='string' name='Model' ordinal='1' />
            <column datatype='real' name='AccelSec' ordinal='2' />
            <column datatype='integer' name='TopSpeed_KmH' ordinal='3' />
            <column datatype='integer' name='Range_Km' ordinal='4' />
            <column datatype='integer' name='Efficiency_WhKm' ordinal='5' />
            <column datatype='integer' name='FastCharge_KmH' ordinal='6' />
            <column datatype='string' name='RapidCharge' ordinal='7' />
            <column datatype='string' name='PowerTrain' ordinal='8' />
            <column datatype='string' name='PlugType' ordinal='9' />
            <column datatype='string' name='BodyStyle' ordinal='10' />
            <column datatype='string' name='Segment' ordinal='11' />
            <column datatype='integer' name='Seats' ordinal='12' />
            <column datatype='integer' name='PriceEuro' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ok43fg1weusoe198zkji0vg4vc1' name='Electric Data.csv' table='[Electric Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Brand' ordinal='0' />
            <column datatype='string' name='Model' ordinal='1' />
            <column datatype='real' name='AccelSec' ordinal='2' />
            <column datatype='integer' name='TopSpeed_KmH' ordinal='3' />
            <column datatype='integer' name='Range_Km' ordinal='4' />
            <column datatype='integer' name='Efficiency_WhKm' ordinal='5' />
            <column datatype='integer' name='FastCharge_KmH' ordinal='6' />
            <column datatype='string' name='RapidCharge' ordinal='7' />
            <column datatype='string' name='PowerTrain' ordinal='8' />
            <column datatype='string' name='PlugType' ordinal='9' />
            <column datatype='string' name='BodyStyle' ordinal='10' />
            <column datatype='string' name='Segment' ordinal='11' />
            <column datatype='integer' name='Seats' ordinal='12' />
            <column datatype='integer' name='PriceEuro' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Brand]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>Brand</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccelSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AccelSec]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>AccelSec</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TopSpeed_KmH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TopSpeed_KmH]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>TopSpeed_KmH</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Range_Km</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Range_Km]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>Range_Km</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Efficiency_WhKm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Efficiency_WhKm]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>Efficiency_WhKm</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FastCharge_KmH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FastCharge_KmH]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>FastCharge_KmH</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RapidCharge</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RapidCharge]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>RapidCharge</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PowerTrain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PowerTrain]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>PowerTrain</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PlugType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PlugType]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>PlugType</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BodyStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BodyStyle]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>BodyStyle</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seats</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Seats]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>Seats</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PriceEuro</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PriceEuro]</local-name>
            <parent-name>[Electric Data.csv]</parent-name>
            <remote-alias>PriceEuro</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Accel Sec' datatype='real' name='[AccelSec]' role='measure' type='quantitative' />
      <column caption='Body Style' datatype='string' name='[BodyStyle]' role='dimension' type='nominal' />
      <column datatype='string' name='[Brand]' role='dimension' type='nominal' />
      <column caption='Efficiency WhKm' datatype='integer' name='[Efficiency_WhKm]' role='measure' type='quantitative' />
      <column caption='FastCharge KmH' datatype='integer' name='[FastCharge_KmH]' role='measure' type='quantitative' />
      <column caption='Plug Type' datatype='string' name='[PlugType]' role='dimension' type='nominal' />
      <column caption='Power Train' datatype='string' name='[PowerTrain]' role='dimension' type='nominal' />
      <column caption='Price Euro' datatype='integer' name='[PriceEuro]' role='measure' type='quantitative' />
      <column caption='Range Km' datatype='integer' name='[Range_Km]' role='measure' type='quantitative' />
      <column caption='Rapid Charge' datatype='string' name='[RapidCharge]' role='dimension' type='nominal' />
      <column caption='TopSpeed KmH' datatype='integer' name='[TopSpeed_KmH]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Electric Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Electric Data.csv_48AF475DDF724BFAA8117159FC110046]' role='measure' type='quantitative' />
      <column-instance column='[AccelSec]' derivation='Avg' name='[avg:AccelSec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Efficiency_WhKm]' derivation='Avg' name='[avg:Efficiency_WhKm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FastCharge_KmH]' derivation='Avg' name='[avg:FastCharge_KmH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PriceEuro]' derivation='Avg' name='[avg:PriceEuro:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Range_Km]' derivation='Avg' name='[avg:Range_Km:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TopSpeed_KmH]' derivation='Avg' name='[avg:TopSpeed_KmH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Efficiency_WhKm]' derivation='Count' name='[cnt:Efficiency_WhKm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BodyStyle]' derivation='None' name='[none:BodyStyle:nk]' pivot='key' type='nominal' />
      <column-instance column='[Brand]' derivation='None' name='[none:Brand:nk]' pivot='key' type='nominal' />
      <column-instance column='[AccelSec]' derivation='Sum' name='[sum:AccelSec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Efficiency_WhKm]' derivation='Sum' name='[sum:Efficiency_WhKm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FastCharge_KmH]' derivation='Sum' name='[sum:FastCharge_KmH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PriceEuro]' derivation='Sum' name='[sum:PriceEuro:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Range_Km]' derivation='Sum' name='[sum:Range_Km:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TopSpeed_KmH]' derivation='Sum' name='[sum:TopSpeed_KmH:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Brand, Model'>
          <field>[Brand]</field>
          <field>[Model]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Brand:nk]' palette='sf_bluegrass' type='palette'>
            <map to='#053661'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#053661'>
              <bucket>&quot;Mini&quot;</bucket>
            </map>
            <map to='#053661'>
              <bucket>&quot;Opel&quot;</bucket>
            </map>
            <map to='#053661'>
              <bucket>&quot;Skoda&quot;</bucket>
            </map>
            <map to='#053661'>
              <bucket>&quot;Volvo&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Aiways&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Tesla&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;Lucid&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;Renault&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;Smart&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;DS&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;SEAT&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Citroen&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Mercedes&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Byton&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;CUPRA&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Sono&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lightyear&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Polestar&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:BodyStyle:nk]' type='palette'>
            <map to='#116985'>
              <bucket>&quot;Hatchback&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;Sedan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cabrio&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;SUV&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Station&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MPV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPV&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Liftback&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pickup&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#053661'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Efficiency_WhKm:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:AccelSec:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:AccelSec:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:PriceEuro:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Range_Km:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:Range_Km:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[cnt:Efficiency_WhKm:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:Efficiency_WhKm:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:FastCharge_KmH:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:PriceEuro:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:FastCharge_KmH:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:TopSpeed_KmH:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:TopSpeed_KmH:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Electric Data.csv' id='Electric Data.csv_48AF475DDF724BFAA8117159FC110046'>
            <properties context=''>
              <relation connection='textscan.0ok43fg1weusoe198zkji0vg4vc1' name='Electric Data.csv' table='[Electric Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Brand' ordinal='0' />
                  <column datatype='string' name='Model' ordinal='1' />
                  <column datatype='real' name='AccelSec' ordinal='2' />
                  <column datatype='integer' name='TopSpeed_KmH' ordinal='3' />
                  <column datatype='integer' name='Range_Km' ordinal='4' />
                  <column datatype='integer' name='Efficiency_WhKm' ordinal='5' />
                  <column datatype='integer' name='FastCharge_KmH' ordinal='6' />
                  <column datatype='string' name='RapidCharge' ordinal='7' />
                  <column datatype='string' name='PowerTrain' ordinal='8' />
                  <column datatype='string' name='PlugType' ordinal='9' />
                  <column datatype='string' name='BodyStyle' ordinal='10' />
                  <column datatype='string' name='Segment' ordinal='11' />
                  <column datatype='integer' name='Seats' ordinal='12' />
                  <column datatype='integer' name='PriceEuro' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Reg-state-wise' inline='true' name='federated.18xsoon0p8a5ka11mjqv71dcmxvb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of Reg-state-wise_US_2015_2020' name='excel-direct.15ko3vu0kp2hap1855ecm18ht08q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/OneDrive/Documents/Spring 2022/DV/Final Project/Datasets/EV Registration State wise/Copy of Reg-state-wise_US_2015_2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Electicity demand vs Oil Displacement' name='excel-direct.1afuy7t1snm6nj1131wrh0i7wqo8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/Electricty vs Oil Consumption/Electicity demand vs Oil Displacement.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15ko3vu0kp2hap1855ecm18ht08q' name='Reg-state-wise-2015' table='[&apos;Reg-state-wise-2015$&apos;]' type='table'>
          <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
            <column datatype='date' name='Registration Valid Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Vehicle Name' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.15ko3vu0kp2hap1855ecm18ht08q' name='Reg-state-wise-2015' table='[&apos;Reg-state-wise-2015$&apos;]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
              <column datatype='date' name='Registration Valid Date' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Vehicle Name' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.15ko3vu0kp2hap1855ecm18ht08q' name='Reg-state-wise-2020' table='[&apos;Reg-state-wise-2020$&apos;]' type='table'>
            <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='2'>
              <column datatype='date' name='Registration Valid Date' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Vehicle Name' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Registration Valid Date (Reg-state-wise-2020)]' value='[Reg-state-wise-2020].[Registration Valid Date]' />
          <map key='[Registration Valid Date]' value='[Reg-state-wise-2015].[Registration Valid Date]' />
          <map key='[State (Reg-state-wise-2020)]' value='[Reg-state-wise-2020].[State]' />
          <map key='[State]' value='[Reg-state-wise-2015].[State]' />
          <map key='[Vehicle Name (Reg-state-wise-2020)]' value='[Reg-state-wise-2020].[Vehicle Name]' />
          <map key='[Vehicle Name]' value='[Reg-state-wise-2015].[Vehicle Name]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Reg-state-wise-2015]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Reg-state-wise-2020]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registration Valid Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Registration Valid Date]</local-name>
            <parent-name>[Reg-state-wise-2015]</parent-name>
            <remote-alias>Registration Valid Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Reg-state-wise-2015]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Vehicle Name]</local-name>
            <parent-name>[Reg-state-wise-2015]</parent-name>
            <remote-alias>Vehicle Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registration Valid Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Registration Valid Date (Reg-state-wise-2020)]</local-name>
            <parent-name>[Reg-state-wise-2020]</parent-name>
            <remote-alias>Registration Valid Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Reg-state-wise-2020)]</local-name>
            <parent-name>[Reg-state-wise-2020]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Vehicle Name (Reg-state-wise-2020)]</local-name>
            <parent-name>[Reg-state-wise-2020]</parent-name>
            <remote-alias>Vehicle Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='boolean' name='[Calculation_1603844447004823552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='YEAR([Registration Valid Date])=2020' />
      </column>
      <column caption='2020 Registrations' datatype='date' name='[Registration Valid Date (Reg-state-wise-2020)]' role='dimension' type='ordinal' />
      <column caption='2015 Registrations' datatype='date' name='[Registration Valid Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State (Reg-state-wise-2020)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Vehicle Name (Reg-state-wise-2020)1' datatype='string' name='[Vehicle Name (Reg-state-wise-2020)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2015' datatype='table' name='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='2020' datatype='table' name='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[__tableau_internal_object_id__].[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[__tableau_internal_object_id__].[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-3' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-4' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:8]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent,NullIfIncomplete' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-3' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-4' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#116985'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk:8]&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[win:cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk:6]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Registration Valid Date' />
        <field-sort-custom-order field='Calculation_1603844447004823552' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Vehicle Name' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2015' id='Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452'>
            <properties context=''>
              <relation connection='excel-direct.15ko3vu0kp2hap1855ecm18ht08q' name='Reg-state-wise-2015' table='[&apos;Reg-state-wise-2015$&apos;]' type='table'>
                <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Registration Valid Date' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='Vehicle Name' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='2020' id='Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE'>
            <properties context=''>
              <relation connection='excel-direct.15ko3vu0kp2hap1855ecm18ht08q' name='Reg-state-wise-2020' table='[&apos;Reg-state-wise-2020$&apos;]' type='table'>
                <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='2'>
                  <column datatype='date' name='Registration Valid Date' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='Vehicle Name' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (Reg-state-wise-2020)]' />
            </expression>
            <first-end-point object-id='Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452' />
            <second-end-point object-id='Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='EV Sales and Battery' inline='true' name='federated.1u83x080ki31hw14h1l9p1lph09g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electicity demand vs Oil Displacement' name='excel-direct.0ocj1o80cbknn514hpj5g1dy4iql'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/Electricty vs Oil Consumption/Electicity demand vs Oil Displacement.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='EV Sales' name='excel-direct.072p0y71nqo2cg1cyl4oh0kk0tll'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/Electricty vs Oil Consumption/EV Sales.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.072p0y71nqo2cg1cyl4oh0kk0tll' name='EV Sales' table='[&apos;EV Sales$&apos;]' type='table'>
          <columns gridOrigin='A1:H705:no:A1:H705:0' header='yes' outcome='6'>
            <column datatype='string' name='region' ordinal='0' />
            <column datatype='string' name='category' ordinal='1' />
            <column datatype='string' name='parameter' ordinal='2' />
            <column datatype='string' name='mode' ordinal='3' />
            <column datatype='string' name='powertrain' ordinal='4' />
            <column datatype='integer' name='year' ordinal='5' />
            <column datatype='string' name='unit' ordinal='6' />
            <column datatype='real' name='value' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0ocj1o80cbknn514hpj5g1dy4iql' name='Lithium Battery PricesYear' table='[&apos;Lithium Battery PricesYear$&apos;]' type='table'>
            <columns gridOrigin='A1:C12:no:A1:C12:0' header='yes' outcome='6'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='Parameter' ordinal='1' />
              <column datatype='integer' name='Price' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.072p0y71nqo2cg1cyl4oh0kk0tll' name='EV Sales' table='[&apos;EV Sales$&apos;]' type='table'>
            <columns gridOrigin='A1:H705:no:A1:H705:0' header='yes' outcome='6'>
              <column datatype='string' name='region' ordinal='0' />
              <column datatype='string' name='category' ordinal='1' />
              <column datatype='string' name='parameter' ordinal='2' />
              <column datatype='string' name='mode' ordinal='3' />
              <column datatype='string' name='powertrain' ordinal='4' />
              <column datatype='integer' name='year' ordinal='5' />
              <column datatype='string' name='unit' ordinal='6' />
              <column datatype='real' name='value' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Lithium Battery PricesYear]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C12:no:A1:C12:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H705:no:A1:H705:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Lithium Battery PricesYear]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Lithium Battery PricesYear_94D6E1395AB945B28F81A59ADC92AB74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parameter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Parameter]</local-name>
            <parent-name>[Lithium Battery PricesYear]</parent-name>
            <remote-alias>Parameter</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Lithium Battery PricesYear_94D6E1395AB945B28F81A59ADC92AB74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Lithium Battery PricesYear]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Lithium Battery PricesYear_94D6E1395AB945B28F81A59ADC92AB74]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>parameter</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>powertrain</remote-name>
            <remote-type>130</remote-type>
            <local-name>[powertrain]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>powertrain</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[EV Sales]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EV Sales_A7674428CD6D40559F0EBA1C126A702F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='EV Sales' datatype='table' name='[__tableau_internal_object_id__].[EV Sales_A7674428CD6D40559F0EBA1C126A702F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Lithium Battery PricesYear' datatype='table' name='[__tableau_internal_object_id__].[Lithium Battery PricesYear_94D6E1395AB945B28F81A59ADC92AB74]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
      <column caption='Parameter1' datatype='string' name='[parameter]' role='dimension' type='nominal' />
      <column caption='Powertrain' datatype='string' name='[powertrain]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column datatype='real' name='[value (Oil Displacement)]' role='measure' type='quantitative' />
      <column caption='Sales' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[value (Oil Displacement)]' derivation='Avg' name='[avg:value (Oil Displacement):qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value (Oil Displacement)]' derivation='Sum' name='[sum:value (Oil Displacement):qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u83x080ki31hw14h1l9p1lph09g].[avg:value:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u83x080ki31hw14h1l9p1lph09g]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u83x080ki31hw14h1l9p1lph09g].[avg:value (Oil Displacement):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:value (Oil Displacement):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EV Sales' id='EV Sales_A7674428CD6D40559F0EBA1C126A702F'>
            <properties context=''>
              <relation connection='excel-direct.072p0y71nqo2cg1cyl4oh0kk0tll' name='EV Sales' table='[&apos;EV Sales$&apos;]' type='table'>
                <columns gridOrigin='A1:H705:no:A1:H705:0' header='yes' outcome='6'>
                  <column datatype='string' name='region' ordinal='0' />
                  <column datatype='string' name='category' ordinal='1' />
                  <column datatype='string' name='parameter' ordinal='2' />
                  <column datatype='string' name='mode' ordinal='3' />
                  <column datatype='string' name='powertrain' ordinal='4' />
                  <column datatype='integer' name='year' ordinal='5' />
                  <column datatype='string' name='unit' ordinal='6' />
                  <column datatype='real' name='value' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Lithium Battery PricesYear' id='Lithium Battery PricesYear_94D6E1395AB945B28F81A59ADC92AB74'>
            <properties context=''>
              <relation connection='excel-direct.0ocj1o80cbknn514hpj5g1dy4iql' name='Lithium Battery PricesYear' table='[&apos;Lithium Battery PricesYear$&apos;]' type='table'>
                <columns gridOrigin='A1:C12:no:A1:C12:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Parameter' ordinal='1' />
                  <column datatype='integer' name='Price' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[year]' />
            </expression>
            <first-end-point object-id='Lithium Battery PricesYear_94D6E1395AB945B28F81A59ADC92AB74' />
            <second-end-point object-id='EV Sales_A7674428CD6D40559F0EBA1C126A702F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Vehicles Per Capita Clean' inline='true' name='federated.05o0wcm0gtdriz197zdzj05y75dl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vehicles Per Capita Clean' name='textscan.09w3nvb0t0rmvk0zvjgs30a07tg9'>
            <connection class='textscan' directory='C:/Users/anuka/OneDrive/Documents/Spring 2022/DV/Final Project/Final Project/Final Project- Anusha Kamath.twb Files/Data/World Stats' filename='Vehicles Per Capita Clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09w3nvb0t0rmvk0zvjgs30a07tg9' name='Vehicles Per Capita Clean.csv' table='[Vehicles Per Capita Clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country or region' ordinal='0' />
            <column datatype='integer' name='Motor vehiclesper 1,000 people' ordinal='1' />
            <column datatype='string' name='Total' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.09w3nvb0t0rmvk0zvjgs30a07tg9' name='Vehicles Per Capita Clean.csv' table='[Vehicles Per Capita Clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country or region' ordinal='0' />
            <column datatype='integer' name='Motor vehiclesper 1,000 people' ordinal='1' />
            <column datatype='string' name='Total' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Vehicles Per Capita Clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country or region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country or region]</local-name>
            <parent-name>[Vehicles Per Capita Clean.csv]</parent-name>
            <remote-alias>Country or region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vehicles Per Capita Clean.csv_4031ECBA164E42599A7B0C69BA1E304F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motor vehiclesper 1,000 people</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Motor vehiclesper 1,000 people]</local-name>
            <parent-name>[Vehicles Per Capita Clean.csv]</parent-name>
            <remote-alias>Motor vehiclesper 1,000 people</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vehicles Per Capita Clean.csv_4031ECBA164E42599A7B0C69BA1E304F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[Vehicles Per Capita Clean.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vehicles Per Capita Clean.csv_4031ECBA164E42599A7B0C69BA1E304F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Vehicles Per Capita Clean.csv' datatype='table' name='[__tableau_internal_object_id__].[Vehicles Per Capita Clean.csv_4031ECBA164E42599A7B0C69BA1E304F]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Vehicles Per Capita Clean.csv' id='Vehicles Per Capita Clean.csv_4031ECBA164E42599A7B0C69BA1E304F'>
            <properties context=''>
              <relation connection='textscan.09w3nvb0t0rmvk0zvjgs30a07tg9' name='Vehicles Per Capita Clean.csv' table='[Vehicles Per Capita Clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country or region' ordinal='0' />
                  <column datatype='integer' name='Motor vehiclesper 1,000 people' ordinal='1' />
                  <column datatype='string' name='Total' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_6AA5C75BA5524EFCA26984D62CB7BD5A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Top 10 efficient models' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Brand' />
        <param name='target' value='Top 10 efficient models' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='EV Market share '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>EV Market Share vs % Cars in Use</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries with EV market share' name='federated.0uxocw91evm3s51bgde5x08ibd9a' />
          </datasources>
          <datasource-dependencies datasource='federated.0uxocw91evm3s51bgde5x08ibd9a'>
            <column caption='% Of Cars In Use' datatype='real' name='[% of cars in use (2021)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country or Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Market share' datatype='real' name='[Market share (2021)]' role='measure' type='quantitative' />
            <column-instance column='[Country or Region]' derivation='None' name='[none:Country or Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[% of cars in use (2021)]' derivation='Sum' name='[sum:% of cars in use (2021):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market share (2021)]' derivation='Sum' name='[sum:Market share (2021):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0uxocw91evm3s51bgde5x08ibd9a].[none:Country or Region:nk]' direction='DESC' using='[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:Market share (2021):qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:Market share (2021):qk]' value='52' />
            <format attr='width' field='[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:% of cars in use (2021):qk]' value='52' />
            <encoding attr='space' class='0' field='[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:% of cars in use (2021):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uxocw91evm3s51bgde5x08ibd9a].[none:Country or Region:nk]' value='45' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uxocw91evm3s51bgde5x08ibd9a].[none:Country or Region:nk]' value='136' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:Market share (2021):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:% of cars in use (2021):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country or Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0uxocw91evm3s51bgde5x08ibd9a].[none:Country or Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Of Cars In Use:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:% of cars in use (2021):qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:Market share (2021):qk] + [federated.0uxocw91evm3s51bgde5x08ibd9a].[sum:% of cars in use (2021):qk])</rows>
        <cols>[federated.0uxocw91evm3s51bgde5x08ibd9a].[none:Country or Region:nk]</cols>
      </table>
      <simple-id uuid='{C820B8D8-918D-41E2-BE60-F84EAD056326}' />
    </worksheet>
    <worksheet name='EV Sales vs Battery Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>EV Sales vs Battery Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EV Sales and Battery' name='federated.1u83x080ki31hw14h1l9p1lph09g' />
          </datasources>
          <datasource-dependencies datasource='federated.1u83x080ki31hw14h1l9p1lph09g'>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Sales' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1u83x080ki31hw14h1l9p1lph09g].[none:year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:Price:qk]' scope='rows' value='Battery Price' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9450275897979736' />
                <format attr='mark-color' value='#0de6b7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:Price:qk]</rows>
        <cols>[federated.1u83x080ki31hw14h1l9p1lph09g].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{A1215AFA-24AD-478C-8ADF-DD5C14FDC237}' />
    </worksheet>
    <worksheet name='Global EV Charging Locations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global EV Charging Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.10dxos406scfp710dwvfu1soaus1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10dxos406scfp710dwvfu1soaus1'>
            <column caption='Power KW' datatype='real' name='[PowerKW]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Title (AddressInfo.Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Taiwan, Province Of China&quot;' value='&quot;China&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[PowerKW]' derivation='Count' name='[cnt:PowerKW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title (AddressInfo.Country)]' derivation='None' name='[none:Title (AddressInfo.Country):nk]' pivot='key' type='nominal' />
            <column-instance column='[PowerKW]' derivation='Sum' name='[sum:PowerKW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([PowerKW])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Title (AddressInfo.Country):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]' direction='DESC' using='[federated.10dxos406scfp710dwvfu1soaus1].[sum:PowerKW:qk]' />
          <slices>
            <column>[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10dxos406scfp710dwvfu1soaus1].[sum:PowerKW:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#2cc8bb</color>
                <color>#3dc9be</color>
                <color>#50cbc1</color>
                <color>#62cdc4</color>
                <color>#75cfc8</color>
                <color>#88d1cb</color>
                <color>#9cd3ce</color>
                <color>#b0d5d2</color>
                <color>#c4d7d5</color>
                <color>#d9d9d9</color>
                <color>#b8c7cf</color>
                <color>#99b6c5</color>
                <color>#7ca6bb</color>
                <color>#6296b1</color>
                <color>#4a88a7</color>
                <color>#347a9d</color>
                <color>#206d93</color>
                <color>#0f6089</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.10dxos406scfp710dwvfu1soaus1].[cnt:PowerKW:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#2cc8bb</color>
                <color>#3dc9be</color>
                <color>#50cbc1</color>
                <color>#62cdc4</color>
                <color>#75cfc8</color>
                <color>#88d1cb</color>
                <color>#9cd3ce</color>
                <color>#b0d5d2</color>
                <color>#c4d7d5</color>
                <color>#d9d9d9</color>
                <color>#b8c7cf</color>
                <color>#99b6c5</color>
                <color>#7ca6bb</color>
                <color>#6296b1</color>
                <color>#4a88a7</color>
                <color>#347a9d</color>
                <color>#206d93</color>
                <color>#0f6089</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.10dxos406scfp710dwvfu1soaus1].[cnt:PowerKW:qk]' />
              <text column='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]' />
              <color column='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{891E56AD-2060-4C0A-A329-28F8DE12AB39}' />
    </worksheet>
    <worksheet name='Power Train vs Efficiency and Acceleration'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Average Efficiency By Powertrain</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric Data (2)' name='federated.0pbxc990on4unf187q5xe1txy1xc' />
          </datasources>
          <datasource-dependencies datasource='federated.0pbxc990on4unf187q5xe1txy1xc'>
            <column caption='Accel Sec' datatype='real' name='[AccelSec]' role='measure' type='quantitative' />
            <column caption='Efficiency WhKm' datatype='integer' name='[Efficiency_WhKm]' role='measure' type='quantitative' />
            <column caption='Power Train' datatype='string' name='[PowerTrain]' role='dimension' type='nominal' />
            <column-instance column='[Efficiency_WhKm]' derivation='Avg' name='[avg:Efficiency_WhKm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PowerTrain]' derivation='None' name='[none:PowerTrain:nk]' pivot='key' type='nominal' />
            <column-instance column='[AccelSec]' derivation='Sum' name='[sum:AccelSec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:PowerTrain:nk]' direction='DESC' using='[federated.0pbxc990on4unf187q5xe1txy1xc].[sum:AccelSec:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Efficiency_WhKm:qk]</rows>
        <cols>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:PowerTrain:nk]</cols>
      </table>
      <simple-id uuid='{B1586B2C-36E2-4405-981D-C08FB689068D}' />
    </worksheet>
    <worksheet name='Price vs Range'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Price vs Range</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric Data (2)' name='federated.0pbxc990on4unf187q5xe1txy1xc' />
          </datasources>
          <datasource-dependencies datasource='federated.0pbxc990on4unf187q5xe1txy1xc'>
            <column caption='Body Style' datatype='string' name='[BodyStyle]' role='dimension' type='nominal' />
            <column datatype='string' name='[Brand]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column caption='Price Euro' datatype='integer' name='[PriceEuro]' role='measure' type='quantitative' />
            <column caption='Range Km' datatype='integer' name='[Range_Km]' role='measure' type='quantitative' />
            <column-instance column='[PriceEuro]' derivation='Avg' name='[avg:PriceEuro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Range_Km]' derivation='Avg' name='[avg:Range_Km:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BodyStyle]' derivation='None' name='[none:BodyStyle:nk]' pivot='key' type='nominal' />
            <column-instance column='[Brand]' derivation='None' name='[none:Brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:BodyStyle:nk]' member='&quot;Hatchback&quot;' />
              <groupfilter function='member' level='[none:BodyStyle:nk]' member='&quot;Sedan&quot;' />
              <groupfilter function='member' level='[none:BodyStyle:nk]' member='&quot;SUV&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' direction='DESC' />
          <slices>
            <column>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:PriceEuro:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:Model:nk]' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:PriceEuro:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Range_Km:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Range_Km:qk] + [federated.0pbxc990on4unf187q5xe1txy1xc].[avg:PriceEuro:qk])</rows>
        <cols>([federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk] / [federated.0pbxc990on4unf187q5xe1txy1xc].[none:Brand:nk])</cols>
      </table>
      <simple-id uuid='{631467BF-B78D-4840-81A7-7410C473A314}' />
    </worksheet>
    <worksheet name='State wise registrations US'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>State wise registrations in the US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Reg-state-wise' name='federated.18xsoon0p8a5ka11mjqv71dcmxvb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18xsoon0p8a5ka11mjqv71dcmxvb'>
            <_.fcp.ObjectModelTableType.false...column caption='2015' datatype='integer' name='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' role='measure' type='quantitative' />
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='2020' datatype='integer' name='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='2015' datatype='table' name='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='2020' datatype='table' name='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Reg-state-wise-2015_4DDA83AA92F34C02BCB444B8AC089452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[Multiple Values]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[Multiple Values]</rows>
        <cols>([federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:State:nk] / [federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{745B5C6C-01B1-4037-8FC8-0BB6919F59CE}' />
    </worksheet>
    <worksheet name='Top 10 efficient models'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Most Battery Efficient Brands by Body Style</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric Data (2)' name='federated.0pbxc990on4unf187q5xe1txy1xc' />
          </datasources>
          <datasource-dependencies datasource='federated.0pbxc990on4unf187q5xe1txy1xc'>
            <column caption='Body Style' datatype='string' name='[BodyStyle]' role='dimension' type='nominal' />
            <column datatype='string' name='[Brand]' role='dimension' type='nominal' />
            <column caption='Efficiency WhKm' datatype='integer' name='[Efficiency_WhKm]' role='measure' type='quantitative' />
            <column-instance column='[Efficiency_WhKm]' derivation='Avg' name='[avg:Efficiency_WhKm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BodyStyle]' derivation='None' name='[none:BodyStyle:nk]' pivot='key' type='nominal' />
            <column-instance column='[Brand]' derivation='None' name='[none:Brand:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:BodyStyle:nk]' member='&quot;Hatchback&quot;' />
              <groupfilter function='member' level='[none:BodyStyle:nk]' member='&quot;Sedan&quot;' />
              <groupfilter function='member' level='[none:BodyStyle:nk]' member='&quot;SUV&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:Brand:nk]' direction='DESC' using='[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Efficiency_WhKm:qk]' />
          <slices>
            <column>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Efficiency_WhKm:qk]' scope='rows' value='Battery Efficiency WhKm' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3403314352035522' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pbxc990on4unf187q5xe1txy1xc].[avg:Efficiency_WhKm:qk]</rows>
        <cols>([federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk] / [federated.0pbxc990on4unf187q5xe1txy1xc].[none:Brand:nk])</cols>
      </table>
      <simple-id uuid='{36D19D84-EFCC-4908-AEC5-E33752C6A35A}' />
    </worksheet>
    <worksheet name='Top registered models 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Top Vehicle Brand model registrations in the US for 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Reg-state-wise' name='federated.18xsoon0p8a5ka11mjqv71dcmxvb' />
          </datasources>
          <datasource-dependencies datasource='federated.18xsoon0p8a5ka11mjqv71dcmxvb'>
            <_.fcp.ObjectModelTableType.false...column caption='2020' datatype='integer' name='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' role='measure' type='quantitative' />
            <column caption='Vehicle Name (Reg-state-wise-2020)1' datatype='string' name='[Vehicle Name (Reg-state-wise-2020)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='2020' datatype='table' name='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vehicle Name (Reg-state-wise-2020)]' derivation='None' name='[none:Vehicle Name (Reg-state-wise-2020):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:Vehicle Name (Reg-state-wise-2020):nk]' direction='DESC' using='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]' scope='cols' value='Registration Count' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1dc1bc' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:Vehicle Name (Reg-state-wise-2020):nk]</rows>
        <cols>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[__tableau_internal_object_id__].[cnt:Reg-state-wise-2020_66B9F05D453C4294A3D353793BB0A1FE:qk]</cols>
      </table>
      <simple-id uuid='{09B12A7E-1F8D-4AB9-8B06-6258479D63B7}' />
    </worksheet>
    <worksheet name='Vehicles per Capita 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Vehicles Per Capita 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Vehicles Per Capita Clean' name='federated.05o0wcm0gtdriz197zdzj05y75dl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05o0wcm0gtdriz197zdzj05y75dl'>
            <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Motor vehiclesper 1,000 people]' role='measure' type='quantitative' />
            <column-instance column='[Motor vehiclesper 1,000 people]' derivation='Avg' name='[avg:Motor vehiclesper 1,000 people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country or region]' derivation='None' name='[none:Country or region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05o0wcm0gtdriz197zdzj05y75dl].[Longitude (generated)]' field-type='quantitative' max='33746659.789104067' min='-47052661.678742088' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05o0wcm0gtdriz197zdzj05y75dl].[Latitude (generated)]' field-type='quantitative' max='13195553.363795605' min='-26176326.456111014' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]' palette='blue_teal_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.05o0wcm0gtdriz197zdzj05y75dl].[none:Country or region:nk]' />
              <color column='[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]' />
              <geometry column='[federated.05o0wcm0gtdriz197zdzj05y75dl].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05o0wcm0gtdriz197zdzj05y75dl].[Latitude (generated)]</rows>
        <cols>[federated.05o0wcm0gtdriz197zdzj05y75dl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{26A6CAD8-190B-47A2-8F97-AF023F07C182}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='EV Metrics'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Electric Data (2)' name='federated.0pbxc990on4unf187q5xe1txy1xc' />
      </datasources>
      <datasource-dependencies datasource='federated.0pbxc990on4unf187q5xe1txy1xc'>
        <column caption='Body Style' datatype='string' name='[BodyStyle]' role='dimension' type='nominal' />
        <column-instance column='[BodyStyle]' derivation='None' name='[none:BodyStyle:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='40755' id='3' name='Top 10 efficient models' w='47950' x='293' y='-651' />
        <zone h='26172' id='4' name='Top 10 efficient models' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type-v2='filter' w='11347' x='48389' y='2734' />
        <zone h='9766' id='5' name='Top 10 efficient models' pane-specification-id='0' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type-v2='color' w='13982' x='71083' y='48828' />
        <zone h='48698' id='6' name='Price vs Range' w='63616' x='26720' y='52734' />
        <zone h='4688' id='7' name='Price vs Range' pane-specification-id='3' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]' type-v2='color' w='13982' x='32650' y='59245' />
        <zone h='39844' id='8' name='Power Train vs Efficiency and Acceleration' w='12152' x='66105' y='130' />
        <zone h='39323' id='9' name='EV Sales vs Battery Price' w='27233' x='0' y='40755' />
        <zone h='14063' id='10' name='EV Sales vs Battery Price' pane-specification-id='4' param='[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:value:qk]' type-v2='size' w='8931' x='77672' y='1432' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='15' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='26172' id='4' mode='checkdropdown' name='Top 10 efficient models' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type-v2='filter' w='11347' x='48389' y='2734'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40755' id='3' is-fixed='true' name='Top 10 efficient models' w='47950' x='293' y='-651'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='5' name='Top 10 efficient models' pane-specification-id='0' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type-v2='color' w='13982' x='71083' y='48828'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39844' id='8' is-fixed='true' name='Power Train vs Efficiency and Acceleration' w='12152' x='66105' y='130'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39323' id='9' is-fixed='true' name='EV Sales vs Battery Price' w='27233' x='0' y='40755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14063' id='10' name='EV Sales vs Battery Price' pane-specification-id='4' param='[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:value:qk]' type-v2='size' w='8931' x='77672' y='1432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48698' id='6' is-fixed='true' name='Price vs Range' w='63616' x='26720' y='52734'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4688' id='7' name='Price vs Range' pane-specification-id='3' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]' type-v2='color' w='13982' x='32650' y='59245'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{171A435C-4772-4758-A665-E5F8FCE307E3}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='EV in the World and US'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='35026' id='3' name='EV Market share ' w='42899' x='146' y='521' />
        <zone h='7552' id='4' name='EV Market share ' pane-specification-id='5' param='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]' type-v2='color' w='12884' x='26208' y='6901' />
        <zone h='38281' id='5' name='Vehicles per Capita 2020' w='42460' x='43192' y='781' />
        <zone h='8333' id='6' name='Vehicles per Capita 2020' pane-specification-id='0' param='[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]' type-v2='color' w='14129' x='71083' y='28125' />
        <zone h='44661' id='7' name='Global EV Charging Locations' w='38873' x='293' y='34635' />
        <zone h='19661' id='8' name='Global EV Charging Locations' pane-specification-id='0' param='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]' type-v2='color' w='7174' x='13104' y='76823' />
        <zone h='64063' id='9' name='State wise registrations US' w='27965' x='22914' y='38672' />
        <zone h='7552' id='10' name='State wise registrations US' pane-specification-id='0' param='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]' type-v2='color' w='10249' x='40190' y='61198' />
        <zone h='60677' id='11' name='Top registered models 2020' w='34919' x='51025' y='39323' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='18' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='269' h='35026' id='3' is-fixed='true' name='EV Market share ' w='42899' x='146' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7552' id='4' name='EV Market share ' pane-specification-id='5' param='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]' type-v2='color' w='12884' x='26208' y='6901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38281' id='5' is-fixed='true' name='Vehicles per Capita 2020' w='42460' x='43192' y='781'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8333' id='6' name='Vehicles per Capita 2020' pane-specification-id='0' param='[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]' type-v2='color' w='14129' x='71083' y='28125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44661' id='7' is-fixed='true' name='Global EV Charging Locations' w='38873' x='293' y='34635'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19661' id='8' name='Global EV Charging Locations' pane-specification-id='0' param='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]' type-v2='color' w='7174' x='13104' y='76823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64063' id='9' is-fixed='true' name='State wise registrations US' w='27965' x='22914' y='38672'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7552' id='10' name='State wise registrations US' pane-specification-id='0' param='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]' type-v2='color' w='10249' x='40190' y='61198'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60677' id='11' is-fixed='true' name='Top registered models 2020' w='34919' x='51025' y='39323'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6AF411EF-CAAA-4BDE-B423-37ED0AEAD94A}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Vehicles per Capita 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05o0wcm0gtdriz197zdzj05y75dl].[avg:Motor vehiclesper 1,000 people:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89EB932F-758D-43F5-9CC8-B24B8527AEEF}' />
    </window>
    <window class='worksheet' name='EV Market share '>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uxocw91evm3s51bgde5x08ibd9a].[none:Country or Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A92F629C-8AC9-4B78-BD32-7F013566EE69}' />
    </window>
    <window class='worksheet' name='Global EV Charging Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]</field>
            <field>[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (Connections.ConnectionType):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D716AF0F-7B02-49E9-A244-255E02834872}' />
    </window>
    <window class='worksheet' name='EV Sales vs Battery Price'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1u83x080ki31hw14h1l9p1lph09g].[sum:value:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u83x080ki31hw14h1l9p1lph09g].[none:Year:qk]</field>
            <field>[federated.1u83x080ki31hw14h1l9p1lph09g].[none:powertrain:nk]</field>
            <field>[federated.1u83x080ki31hw14h1l9p1lph09g].[none:region (Oil Displacement):nk]</field>
            <field>[federated.1u83x080ki31hw14h1l9p1lph09g].[none:year (Oil Displacement):qk]</field>
            <field>[federated.1u83x080ki31hw14h1l9p1lph09g].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{723539E8-D94C-4B7D-8480-38C673AA0A45}' />
    </window>
    <window class='worksheet' name='State wise registrations US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card type='filters' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='143'>
            <card pane-specification-id='0' param='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:State (Reg-state-wise-2015.csv):nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:State (Reg-state-wise-2020.csv):nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:State:nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:Vehicle Name (Reg-state-wise-2020):nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[tyr:Registration Valid Date (Reg-state-wise-2015.csv):qk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[tyr:Registration Valid Date:qk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[yr:Registration Valid Date (Reg-state-wise-2015.csv):ok]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[yr:Registration Valid Date (Reg-state-wise-2020):ok]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[yr:Registration Valid Date (Reg-state-wise-2020.csv):ok]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[yr:Registration Valid Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7ECB3E15-B9B1-4C58-A068-01076EEDE110}' />
    </window>
    <window class='worksheet' name='Top registered models 2020'>
      <cards>
        <edge name='left'>
          <strip size='123'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:Brand:nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:State:nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:Vehicle Name (Reg-state-wise-2020):nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:Vehicle Name (Reg-state-wise-2020.csv):nk]</field>
            <field>[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[none:Vehicle Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6757B887-570C-4E7A-BB9E-0F4E6DE20B13}' />
    </window>
    <window class='worksheet' name='Top 10 efficient models'>
      <cards>
        <edge name='left'>
          <strip size='141'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='145'>
            <card param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[io:Body Style Set:nk]</field>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]</field>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85D5A5AE-A71E-4F05-BB17-CB87AF45EA3E}' />
    </window>
    <window class='worksheet' name='Price vs Range'>
      <cards>
        <edge name='left'>
          <strip size='123'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='138'>
            <card pane-specification-id='4' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]</field>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:Brand:nk]</field>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:Model:nk]</field>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:RapidCharge:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2472B4D7-4B2D-43D4-9A94-782295166C82}' />
    </window>
    <window class='worksheet' name='Power Train vs Efficiency and Acceleration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='13' param='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]</field>
            <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:PowerTrain:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B265457-E979-4C69-BF32-77E881B9D644}' />
    </window>
    <window class='dashboard' maximized='true' name='EV in the World and US'>
      <viewpoints>
        <viewpoint name='EV Market share '>
          <zoom type='entire-view' />
          <highlight field='[federated.0uxocw91evm3s51bgde5x08ibd9a].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Global EV Charging Locations'>
          <highlight>
            <color-one-way>
              <field>[federated.10dxos406scfp710dwvfu1soaus1].[none:Title (AddressInfo.Country):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='State wise registrations US'>
          <zoom type='entire-view' />
          <highlight field='[federated.18xsoon0p8a5ka11mjqv71dcmxvb].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top registered models 2020' />
        <viewpoint name='Vehicles per Capita 2020'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{BE9F73E2-CC55-4FA9-B2E0-7F1974159F3F}' />
    </window>
    <window class='dashboard' name='EV Metrics'>
      <viewpoints>
        <viewpoint name='EV Sales vs Battery Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Power Train vs Efficiency and Acceleration'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Price vs Range'>
          <zoom type='entire-view' />
          <highlight field='[federated.0pbxc990on4unf187q5xe1txy1xc].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 efficient models'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0pbxc990on4unf187q5xe1txy1xc].[none:BodyStyle:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DF79A587-308A-429E-B396-E38BA125EA42}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='EV Market share ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EV Metrics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EV Sales vs Battery Price' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='EV in the World and US' width='192'>
      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
      H+MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global EV Charging Locations' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Power Train vs Efficiency and Acceleration' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price vs Range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State wise registrations US' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 efficient models' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deWwcWX7fP9XV991s3vclHjooidKMRpoZzT2zs5fj9a5hI4aDAMkfOYE4
      gB0jgL1JjBgBkvwRIH84QGIk8Sa2N/bY67U919pz65ihLlKkeIjifTSvvu+qyh+UKDarSLZG
      FCmp3wcgwH6v+r1f13vfd9Wr35M0TdMQCEoU00EbIBAcJEIAgpLGvPlDJBIhk8k80gxzuRwW
      i+WR5iHYX/L5PCaTCZPp8W5PjeyU9nsOEAqFqKys3M8sBY+YSCSCzWbDbrcftCk7Eg6HcTgc
      2Gy2jbDHW7ICwSNGCEBQ0ggBCEoaIQBBSSMEIChpzLtfIhA8XeQ1BVVTASEAQQnySbSPodQd
      QAyBBCWOEICgpBECEJQ0QgCCkkYIQFDSCAEIShohAEFJIwQgKGmEAAQljRCAoKQRAhCUNEIA
      gpJGCEBQ0ggBCEoaIQBBSSMEIChpxAsxgn1jLBrjNy9f0YX/9qnjHA34D8AiIQDBPpLK5+lf
      C+vCE7ncAVizjhgCCUqah+4BliZvMTA+j8ldQW+Ljy+v3sJe0cTxegcXrt3CGWzk7MlOpL2w
      ViDYYx5aAOWNnbxQ1cDg2BTLSyv0vvgaS0PXGV5M89yLr7I4coNoDjzy+lv4mqahKMpDGy54
      fFBVtahyVVVjN7Squj91QtO0u7beD3toAWQSa4xPLtHe0UHo9gCSJGHaaO4lJAnQ1jO/Z4Q4
      k+Pp4n7F2rlct4vfrzqxkc+mvB5SABp3bl5lIiqxlsjR2eDmy48/xFZWy7FqBxc++Rl2fy3N
      FjBJMgAmkwmzWcy9nyZkWUaWZRRJIqeqBXEmScJ5t7xl2XjKKcv7UydMJhOyLCPdb6EfVgAS
      3Wdeo3tTyOs1bRv/v1Hd+nDJC54ofudqPz++M1kQ1uR28d7brx+QRbtzIE3xWiLFe/1juvCX
      upqp8XsOwCJBqXIgAphZi/KP/9df6ML/3z/9JSEAwb4ingMIShohAEFJIwQgKGmEAAQljRCA
      oKQRAhCUNEIAgpLmid2T8IcX+/n1P3pPF379d/4JAZfjACwS7AV/MDpOKJ0uCOv0eflWY/0j
      ye+JFUBOUYhnsgdthmCP+ZOJKYbCkYKwbzXUFS0ATdO4GFrWhTe5XTgNrn9iBSAQGKECf/+T
      L3Thv95zhO9VlevCxRxAUNIIAQhKGjEE2gFFVUlm9S9sOywWzNvsbRc8WRQlgGRsjXAshdnq
      pLzcXzLdxs3ZEC//7v/Qhf/pP/tlXu5uOQCLBHtNEQJI8+4f/wlSeSX+8kZeKD9RMgIohvcH
      xliNpwrCGoI+nj/UeEAWCR6EIgRgwemRSWqA8O2g4z/89FOuTs0XhP1cb9cDCaDp1/4jW1+J
      /c3vnOcfvfrs+v8/fp8ffXGj8Dvlfj791//g6xkt2KAIAeRR5SAvvfoqDot53yYNv/3O3zAe
      Wi0Ie6aljn/+5tl9smD/iKX1zzOy+fteEtI5/TOPxKbPd5bW+K0//ZkujX/17fMcqavcQ0uf
      PoqozyZc1gzv/vQn+CvaeOONM1gfvV18PjrFlYm5QktMe9sDfTYyydDcUkGYx2Hjl84c27M8
      bs0v8enwpC78V58/gc2yN81JJJXmL6+P6ML/4UunN/5/p2+Q5ViyIL61sozXDpf2e9s7loCq
      hPmTP3iXY+dfJBga5tpUZKfLHzt+44/f17nbeLvnEK90rxf6O32D/P6nVwvim4L+PRXA5dsz
      /MYfv68L/8GzR/dMAMXwX96/yPXphYKwnz/VLQSwU6RkcvPiy6d5789+RL7+BN9+7bknat30
      v3/ch7pFALV+z4YABIId67Ompbj+1XUcVY2gRrl+Y5RXXj4lVoEEB8afT0zzn/oHdeHvvv3a
      hv+hB2HHumwyeXjrF36Oep+VVCpJOpNF+HQTHCRJJU8ondb9fV3Hcrv0ACrZTIpI1sbf+f43
      sZtlLF8vH8FjztjiCl/dmdOFf+/0YaxmGU3T+KNLA7r4E43V1Lj2Y1nk0bCLAOJ8+Gd/RURV
      +Ouf/Dm+ylZef/UZIYKnkM9Gpvi1//vXuvBvHu/Aal53a2nky+nf/Pyr/Oqz3brwJ4VdB02K
      quENVFBZUUlDcwvyflglEOwTO88BJA/f/P53aSqzcPmT93jnLz5l69awtfkJ3v3oc7I5hej8
      BO998B4Xr9witjzNhx9+wBdXh8W8QfDYsmMPoCgh/u2/+F263vo23/z+r1BZUa57CBaoaaY9
      kQUNoukkjY2d1DXUMD85vO35ANoWD8L3KPAxbzSr0diI386dtqqqO/qa35yHcRb349Vt7FS1
      +3loBvLWNtm5dRn269lpnMZG/HZ+97XNeRjZuTmPbX5rEXbec42+m51FnQ9gkEYx9+Kenca/
      4r5r9K3nA+zYA8jmKn7rP/97uspU/uLH/4ff/9FP2eklxGB5FSY1SX/fFVJ39w5tPh9g899O
      RhYTv+2NeKA8Ht6ObS4w9EVfeMnOleZB7FS3qbwF98vY0iJ+q3o3j11sUFVDOx+03I2u0Iqw
      U713P7dptLYrk12fBP/5H/4UZ10j3/3FXyFY5tf1AKHJIa5dG2B2Pk57k4v5xUU02UtdwL3t
      +QAm2XhLQ8HZAZL+GskkbcSbTMbaNcvyjr7mN+chGeXB/Txk2XjGI5vu5yEZbBAsxk5ZNj+A
      ndv81oe1U9ps5zZp3LVzu4p3z+e+LMuGdm7Oo5jzAYzKxCQVU+7rdirb2CmZTA9+PoBJ9vML
      f+/vomnGhgFUNnXz/ab7qwB1jZ0b/79RI564Ch5vitoN+uWHH7CQt/Hc8+eo9AqXI4KnhyJ2
      NZjp6j2JLTXP//xvv8d7F4bEqo7gqaGIHiDH4PWbtDzzFq//nIe5Gf1BxwLBk0oRPYBKMm2m
      udbHZ+9foKKpWrwXJnhqKEIAFmRlnp+88xMWFLEXSPB0UYQATDQ0t6DkFKqCATH+FzxVFDEH
      yDA4NM/zr7yMw+oQ7wIIniqK6gHILvPBu+/x+Zc3yT96mwSCfaOIHsDK2ZdfYjZhx+cyizmA
      4KmiKMdYX3z+MdF8KwFrioof1Bq6mRYInkSKWgWqqQ4yM36FhCeI/dHbJBDsG7sIQGPw8pcs
      rWWwuszk0xkxBxA8VewyBJI4/Oyz1K528tZ3fUQi0SfKLYpAsBtFDIFyXPzgAy59dYmffXhZ
      90aYQPAks+sQSFHMnH/7VTx2Dy+/9cK+uEUUCPaLXbxC5Ln+xQWmZidZiqUJTK3x3W+/KEQg
      eGrY5Y2wCANDo2QVC6efP4PLVSa8QgieKnb2CiEHeO2NM1jMGvFYjEQyLfYCCZ4qdukBVvni
      8yFsNjc1tbXY7R6xF0jwVLFLDxDk5Ik6VlYXGRkeZmJ6ge0dZAgETx47CkBTVliKlPOtF89w
      /IUXcaQT4kGY4Klil1WgNJNjU+Rca9h9PuYm5+jc6QsCwRPGLgdkeHHbVllQVKRr13BVN4gl
      UMFTxS5+gXx8+5d+sKNfIIHgSUb4BRKUNMIvkKCkKcov0K3+IVqe+QZvfs/LzGTh2b3xtUWu
      jcxw5tRJ8sll+q7cxFN7iK5qG5evDOCtbaOno1G4UhE8lhT1XCurWmiqDSJhpWGLXyCrw0uZ
      z4WmaizMztF1+nnM0UVGZuY4evoctsQyCfHwQPCYUtT2/vTCIP/1927R1nqEt79xrmAlyGp3
      YDXf1ZFkwmq14LRKrGrr/9ttErk85NT1jdSKopDPGSsin8+Tza47YDdyc62p2kb8dj7rs7kc
      2ez2O5YURdlIw8j/v6bdzyOXM37qUWCngTdiVVU34vPb2JnL5chmt29/Cu00SEPjfh57YKei
      GKeRy2XJytK2w15FUcjn88iyvOv9zOf3ws7tyj2LRVO3deN+z85cLldgZxECMFPRWE2zv4oK
      r6zrMtYWJxkdHSUW16gqs9L/1WUUyUZHrYVrfZdRJRv1VjBL66/Ty7KM2bK9u2+rdV1ekoEb
      bMkkbcRv5xLcarFsXGOELMsb8UautiXpfh6WbQ6yLrDTyJ23ybQRb97GTssD2WmQhsT9PPbA
      Tlk2TsNisWK1Wrd1jy7fdUdvNpt3vZ/buYN/MDu3K3crVsv27tHv2WmxWDAp9+0syi/QzPwq
      iaSF+UiO/LnCL7l85Tz33DlMJjMerxOPP47V4cZqlnAFYlgdbsxiAiB4TCliDuCg91QvMis0
      9Z7WvRRvtbsIBAL4fB5MkozH68NmWT8s4d7/AsHjShECSLO4LPOLv/rLWCNLZB69TQLBvrHL
      EEjj2sd/xf/+04u09rUQbDzGkf2xSyDYF3b1CnHipW8Qy9Vy9rXTjA+MoYB4K0zw1FBED/Au
      7/zkAjdGr+Au76DlWNf+WCYQ7ANF9ADfwRXswub3YLW6ResveKooYhlUZbj/Y4YmJeram/jB
      998Wr0UKnhqKqMsSDl8dZZ4s0XBi25O4BYInkZ1fiVRzfPDOj8lYHNjtNipaWoR7dMFTxY4C
      UJUQkWwDgegSh7/xPexLs6T3yzKBYB/YeQ4gSUwOfM5tcwZ5bgWrVMEr+2SYQLAf7CgA2VzL
      v/x3v7lftggE+45Y0BGUNEIAgpJGCEBQ0ggBCEoaIQBBSSMEIChphAAEJY0QgKCkEQIQlDRC
      AIKSRghAUNIIAQhKGiEAQUkjBCAoaYQABCVNUd6hiyWxPMelGzdx+hvoaQ/SJ84HEDzm7GkP
      EE0kOXLiHM/1djE3K84HEDz+7GkP4HJauXr9MgOSk+oqpzgfAHE+wFNwPkDx5LJ5PH4fiXgO
      r0OcDwDifICn4HyA4glUN2Bxl2Gxu7BbZfxl4nwAwePNngrAJFvw+vwbnz1e314mLxDsOWIZ
      VFDSCAEIShohAEFJIwQgKGmEAAQljRCAoKQRAhCUNEIAgpJGCEBQ0ggBCEoaIQBBSSMEIChp
      hAAEJY0QgKCkEQIQlDRCAIKSRghAUNIIAQhKGiEAQUkjBCAoaYQABCWNEICgpNlTtyibiYUm
      uHR9FHtZHed6D2MSvoEEjyGPrAeYX4ny3PlXqbVliBl7xBMIDhwxBBKUNI9MADVBLxc/+Rvm
      s3Y8j2ygJRA8HI+sanoqm3n9jeZHlbxAsCcUCCASiZDJZB5phrFYDEWB73Y36OKs+TShUAiA
      s3Vl1DsKPQEfK/dsxAdk1TCNyOoqucS6J+rvdDfovBrX2E0baRzyOXRplLkcG/FKMm6YhyW3
      yc6GIA2uwnak0E5tGztXyMbX7TSKr7Hdt7PDb9ddE3Q7N+LVZMIwDXMutXHNuYYgTW5LQfzR
      oHsjvsxsfD/DqyukLWY0zfh3VNskwuEwFouFFlTe8LgK4svstvv3M5HUxQNIsRihuw7YT9ss
      1G+55pCJjTT86bRhGqvLSyRkGVXTDOODuQyRSIRkMok1J1GV867nrW3n9/oREQqFqKys3DY+
      l8thsVi2jdc0DUVRtnW1XUwaiqIgSZKhO+9i0xB23icSiWCz2bDb7Y+1neFwGIfDgc1m2wh7
      7CbBOxX2PYx8yBuloWkqRvLe7fvF2LGXdu70/YdNYz/sLIb9tHO7cjfiQKenuXSY/oE7OFx2
      qhraKHNbCw9AUPP0X/xbboZSeL1VfPPVM0iStHGNpmmoSp5EeJlbkyGOHD2Cy2beiM/GV7k5
      OoXVbEIxOWhpbcbrtBXcbE3TuH7jBsd7ehgY6Kf7yDHMpvt5oGnEQ+PMqZW0WpcYSlZwrMFT
      aKemMDZ0kwwWHN4grfWVBXbO3RlmKZpev1a20n7oUIGdaBpaYpHri3Cs2sLNuSQ9hxp0lWK8
      /zKXhyex2Mv4+W++immTnUODA7Qe6sZmKRw2brZTyyW5PjrD8a42rg8McqLnWIGdmUSEpdU1
      VlYjxnYCaCqjg/0kchr1bV2Uewpb/bW1VRLhZVaiKbB66OlqKcgDIB1b5C/fv8DJjjoyVT10
      V9rux+cSDN+eJBZP4XLZUWQ3RzuadGmEpkb48IsreJwezr72JuUuy/3fEVvh5tg0NrMJRb5b
      7g4bW1m4M3SwAshEFlE9tXR3VhlfoOaIZBTKKxogF9NF37r6BTHNiVtZJes7gctW+HNkq5Oa
      mmrSsQjhZJLQagyvs/BGRJZmGRwawiRBMi/rH9jlkgwNDTGbDxFza9QertfbqWRZCGc4e7YH
      2aCRqm3ppDqfYXElht9t0588o+a5MzrM4HQeLezFU91ieDsWVuNUVdWQy+V1RxZFl6a5uBLB
      al4XTUv3Sar9hZVzYWqMwcFxpFwSyerVpW9z+aiUJMxW5/qpLWaDVjkxx3TCyYsdDi6MTXH+
      ZMem36EgoWG2e6j1BMirxq16LhEhrWishcNI/hywqUwsLjrbGvn4y1uc7O3k8wuXoKNJl8by
      Shivr4zacgeprAqbhv1mm4vammpS0TCRVJKl1TjeOr0AJmeWkX/4wx/+0NDKR0QikcDlumut
      qnDn9hirqyvIzgAu+5aKIZkpr6ih3GenuqYB5xYVW2121GyKWGSVUEyitaESeVMNToXn+ap/
      DIvdRlllA421QUxbulG7y0tNmZNESsFfXkXA66LgEtmKz6ahuOro7enCYzM+omdtYZrZ0DKR
      lEpFQF+5JoYH+KhviKA5RdwSxOfY9FtNMoHKGhxSlkxexe0rw+926NIoL6+gosJPWbAaj8tR
      MCRYXoty/ORpWpobaaivxWqWkeVNFTCbYGYpgtvpxGG34/T4KPO5dXmMDFwhI7tx2izY7faC
      +wmA2U50YZJQOEFNQxM+l41MJrN+TJIsk86kufzlV9TW1XH9Rj+tzc26oYvV6aPS78bireRQ
      Q7m+0TCZ0ZKrhFZWsXmqqAzq76fPH6CuthKrM0hV0IO8KY/k2ix9/bexOuwEqxporClDkiTS
      6TQWi2VjHpGLLh5sD2B2+PA5IByJUKFsadNySUZuT7AWieP1usloNsrLCm+Ex1eGyeKgsa2T
      tliYTDqL1XVfJI5ALWef9RFdXWJk4DJLkaOc6tKvZIyMTtFz9hx9Fy/QWHMe85YSsbp8TF2+
      iBKtp6n9MBVefWuipdZYdZaRX5qD1jpdvNNhR1LTTC5EONpiMFFLrzA2Ooo50ICyGqGpOnA/
      TskxOTnBYmgFt89HPK1SVREoOHr2cHc34eUZBicnGF/O8dYbL2PdnI3FQXv7IZKJBDlFRbbq
      BQbgsVkYnp0hFfPgcHuxyFtacS2PoknY7S50R72ZZPyBIN31FSysrCFb7BidjxsP3ebayCpN
      tQHiySwBV+FZacvLITSTiXQyh8Ovb3Bm79xiOXp3tVK24g8EsGzq/Z1l9Zx9NkBkJcRo/yWW
      oj30dujLpKyi4mAFkFi6zdBMlJNNPkKJPPVlmyItTjram/n44gCnu7r57LNPgbaC7w9fu0zW
      7ieytkaZv4z2roqC+Hw6xsxciGBlDS+/3s52c6immjJGbg1jdQUxmotZ3BWcOXWMeDqPxejA
      M1Uhlc2Tyq+y3YFoweo6TnXnsHorCDgMehGri5qGZhLRKFZLdWGcbKGp9RDT03Mc6urm4uef
      rE/yNmU1N9bPRMxMa5mPNasLr643NWExy0TWlogmU9yZi/KdN88XXKJpKjWdJ6lSVZAk4wP+
      MlHiko/ew4cMfyeAr6qG7FqchoYGXf2Ph5eZDa0hm804HQ7MBpvEyoMVIFlpPuRndXVNF1/X
      0kUgFkVRsywsJzCbC+3MpaLMzC1RXlXLy68f2rbcb96aPNhVILu/lhMdTSRyUOnRt6rIdtqq
      PYwMD1JR266LXojn6DlyGCUdo/lQB/YtlS+5Os/4zCJz03e4ceM6U4v6mwmgKnmml2I4TDnD
      1YPE0jh/88VVQpNjTEcNNjaZbZw89zK9HY0890yvYR63hwexB2tJL40xH9nyrEXJsbyWxGI2
      4fB4CHj169gARzsaGRocxBOo1c1Vmo8+y9kTnVidXuzpJVZiBs9zNI1kPE4smkC26E+ozKbi
      hBbmGBkZYWTszvrYWvdb3VizS1y9epXJBeP7aXO4CJQFuDM2opurWKx2Kmrb6OlqxuV0FA7T
      Nu5Hmpu3bqNpKgODQ4Z5jI0M0n/5KgurcyyE0wVxiZU5JmZDzE6Nc+PGdaZDYcM0ug/VH2wP
      oCo5ZIuNXC63/Tm0qkI2ncVq17dG3c3VfPHZZ/gr6pmenKCpqRnnpjG6r76LU+ptQpEUmiTj
      MlgJAJhbXkPWTCyHs4YCkK126isrkKUUbB2qAeRT/O3PPsJXXs6H7/0VnWde59yx1oJLXDYr
      4xO30RJRlsfGqTrZiflu4ecVBU+gCpfHj8NhPDSB9aEi2LDZ9ZV3bW0Nr8eL2VXGC6crWM4a
      JCCbaWnvJBhPItucuuiZidskFIt+3L8Zsw23w0ZeU7FYjdfcVxdnmFmOocr65wI2p5v06iQT
      qUqOOufom7Jxrn3LYYoWJ91NAW7299PWdcIwj7aWZsacCeoCVpzewnwCjd2c0G4TiqZBMhuW
      u6aqDM+uHmwPkE+ucX3gFj6XienlpP4CJcPEYoIjx08wP6FvCZYWQ5RVVRGJp+juaCuo/AAS
      Eg6XG5vNipJNk0wb1Qo42XuK9vpqug73GBa+2erC63Nh9VZQ4zVoMyQzfn+AxqYGamprUbKF
      LZKmKphdPioCAU698CYvne7eqPwAy1ODjIcSXO7rM7TvHqHlGIe6u+lua9RNLEeGh8hkUvQP
      j0F0mv7pqD6BfIYrX/yMj/oGuNx3Qxft8njIZdKARCBYid1qUD2Si4RyXo60VjE2OWdoZ337
      UY50tNLapB8CATiDdairE/RPp+iq9+gvUPKsrEWIJ+KMjI4Z5pHP55iamSOdiJHNF/ZUEiac
      Ljd2mxUlmzIs98jyHBN37hysABzlrbz+yvOUVbdxstngSFXZRmuNh5vXr1HT3K2LXkmptDU3
      o+YS6yeAb2m+w7O3+OSrQeLJDA6nE3mbhy2huRlW19a4faufsZklXXw2uUrWEuTw4W7dhG3d
      TgsnT53AarFz9sVXONPTURA9fOUiUZOb2uogA19+TjhdeNq5xWJlaXacRCzG0NAQ88sGlReo
      rvDSf6WPKzfHdL/VZTNx+/Y4qViYoallvA6D1lkCs8OP32HVTfQBqurb6Dl2BKuWYmjwJrFU
      4XBP0zQ0ZzU19jj9txfpaNmyJKxkGOy/yvWrV7nUdxWz06Bys37ye3VVJRqgqAY9qslMW9dR
      ek/2YlIShmnMzs2TyiSJR9eIpXIFcavTg3x65daO5e6vrOdMT9fBDoGSoVG+HFzBqUWQW1/k
      udYtItBU0nkJv8/FWjqt+/7h9ibujI9TV1PD5PQcdfX1OKybhkC1h3jOEsDl9RJeixDw6rt9
      gIm5Fc6cP8+lzz9lYmyAQw2vbLFDYm15nhlHjvKaRnzOLZVLyXHj4keMRE34XH6+8+YLBdGr
      yRwnKstxmCUCbjOxVA7/piFdsOko55sAju94v+x2G3JqvSJurb6HDh0mb3XTXL/CcjRLe5NB
      g2Ky0t7ZTTavYrbrl0Bv9n3GUlyltqmV4zUuXY+aDC8QSlgIuK1EV1KkM1lg8z2VsDuc5HJx
      NE0lkymsmPdIh+fpuzFDV4OTkdkYFYf8hReoeabGR4gms9TUt+q+n0ql6OjsIq2OoDjKqAls
      GQLVdXLGFty13KvrGw62B7B6K7GZZVpa26jcMo4jl2Do1gjx1Xk+ujyMy6kfx6lKnlwuRy6X
      ZWFuDmVLtQjP32ZsdoVLH39KLLbM1eFJQzu6WmsZGryF3VtBfU2NwRUKmXSadDpNXjGYGGoK
      ebOTikAZNrO+Res52sngtStcu3qFnKueGv/2e2Z2YmR8gaPHe4ivzrK14bw1OEA6neRq/y1s
      6VluTBu0nPk0V/tvIckyJoOhXnPHUY4dPULQYzwPiYeXSKkag+MhejvrmJ4LFV4gW2lt76Tn
      ZC/PP3cWj8XgXgE2TwVdR47Q2HaUE4Y9v4X2rmP0njjB8uKULrrv2jXMDi+9vac50tWqW3hb
      nRtlfG6Vix9/Siwa4uqwPg2AdCZ7gD1ANsFqNIvP72IpmqG2fEu82U5NbR32liYq6ldwl/l1
      SVQ3tlPNeos4PnCJpWgGd/n9wsulUzh8tSTCi9QH/cxPxA1NSWcyxCMR0jjofe5kQZymaTjK
      23jr5UYUTcNmMxgCmax0Hz0BshmHU9+yustqOBVYX9osZh+SDk0jl89xuLOBa5e/xF/VolsF
      qgx4GLxxFV9tO07THHajCarJjDWfZHJ6BnegUrfa5PYG0Ft/n/LaNkI3b9J2rBeFLK31xk/w
      JUnC5SvDZVC3AVBzLC4uU1vpwy5tWc/NJRi+PX13iKehoL/fsdAUFy7c/WC2c+zYMdybln2z
      6TROfz2xtQXqy/3MT20ZPShpLnx2EdXiPrjdoKl4mHAstRHuDVQUPglOzvHRQJwWd5SwHGB1
      aYVXXni2IK2J4evMr65Pns12L8d7DmPdNLbNpWLMhVY3Prv95QR9xkuMoPH5Z59x5uwLBePj
      +dtDyJXNrI7fJJbM0djzDFVbtj+jqayG5hi/c4eEHOSlZw4/4F3ZBSXH1NQkkaVZQoqP+qog
      HS31OjGpqorJZEJVFCSTyUBsGonwEgnNgc2k4fPpn7B+HYrZDbqZfCrK6PgUmslMbVMb/q1D
      yl0YGRujo12/LH6PbDLK/NL9JVp3oIKg13l/N6gS529vznO+8QA3w0mSCVmWycRXGBgco/vM
      a4UCMDvIrg0xGjdz7sXjXF6Y16Uhyy5OnjmO3aSxOH2bVE4rEIDF4aGpyXgitpmZsQGml6KY
      nPoHYYvLa9SXBVmIwfPtLi7NxqjqCBRepObpv3YVf8sxeuu3PMTaC2QLjS3txC1J0tkGOlsD
      hpfd2zxnMnqABZBPc/3LCyQC3dgyy5x//tze21oESi7FcjiJQ0uQqGtD37fvzE6VH8Dq9NLU
      tIO4rS6qnDCypBzcHECSYGl+muWkmdff/hbNFVsmKtYAb7zxCq++8hIOs8wLL1ZOCFcAAAL+
      SURBVOgLa3p2GkVd3/oaWQkRSRovc+5GIhJmOpKDTFg3tj56tJOp8Rl6Th4nhY8jTQbFZbLw
      zLkXscVn+fjLm1/Lhh1RckyOjzK+ECW5NMXQ7Sndiz5FYTLjdTuJL02BwWa4/SKbCGP2VNBQ
      bmdhTb+48cgx2zl85CjdR48fXA+wMj9FUrXituYZGxne2A69Gclkujs6NGE2aNR6jnZy80of
      ZlnC4qqlLfD1JpepbA4pnyQc168WmF1Bek8F1z+49LsSAdBUYrEYnpp23uipML7mYbi7FYLW
      7bcfFMPa0gL26m7ePFFOJGz8dHQ/cFe10ZidJq7Wc6Jx9x76UfLYvRH2oNwz/2tNLllfScqk
      U0TjSRweHx6Hfdu9I9uST3Hx6k1yyQSq1clLZ5/5WrY8UlIL/KwvxNFaE323lzh+6gx1ZcbL
      gw/Kg8wBVqZHGJxZxSRZOXX6pG77yqPkiXgj7EEp5q2pbVEy9F26wOCtW0wvxfE6v0blB5Bk
      zLkI9mATbtuBPlrZnnQCxWpb33tj8+I0WK7dD0anQ5w69QwBe45I4usNWfeSJ14AD0U2SVz2
      0Xv8GPHI8tdPR5LpOnGW00caaag3eGHmccDbSG9rEFyVPHt4m6HcPtBQW8HE2AgZVSY0fZu1
      AxbBY9pc7RNWF01BG7dG71DuczN0e4rO1gbdSzO7IkksTYxyPRylrm3np7kHhmyhvHzrw5b9
      p665E/3O/IOjtAVw98nlQ5GNc31wFCWbIJJUKUvEgINbYRE8GKUtgD3CZJLB5qGuAsMtBoLH
      FyGAh8Xq5ljPMVLxKJFYEnfg4IcZguIp7UnwXqFk6LtyA01SufTV1YO2RvAACAHsBZKM1aQS
      jYTXXwQXPDGIIdDDks8wt7TGsWfOgZKno3P7VxoFjx9CAA+LyYRJyzMxOkQeEw5vBe2N2zj6
      Ejx2iCHQwyLJeLxenHYLmXSaWMLg3WbBY4voAR6WXIrp2QUqappobHcavgQueHwRAnhYrC66
      Ojt2v07wWPL/AXEAzP+WPoi4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top registered models 2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vehicles per Capita 2020' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
